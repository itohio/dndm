// Code generated by mockery v2.42.3. DO NOT EDIT.

package dndm

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
)

// MockIntentInternal is an autogenerated mock type for the IntentInternal type
type MockIntentInternal struct {
	mock.Mock
}

type MockIntentInternal_Expecter struct {
	mock *mock.Mock
}

func (_m *MockIntentInternal) EXPECT() *MockIntentInternal_Expecter {
	return &MockIntentInternal_Expecter{mock: &_m.Mock}
}

// Close provides a mock function with given fields:
func (_m *MockIntentInternal) Close() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Close")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIntentInternal_Close_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Close'
type MockIntentInternal_Close_Call struct {
	*mock.Call
}

// Close is a helper method to define mock.On call
func (_e *MockIntentInternal_Expecter) Close() *MockIntentInternal_Close_Call {
	return &MockIntentInternal_Close_Call{Call: _e.mock.On("Close")}
}

func (_c *MockIntentInternal_Close_Call) Run(run func()) *MockIntentInternal_Close_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIntentInternal_Close_Call) Return(_a0 error) *MockIntentInternal_Close_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIntentInternal_Close_Call) RunAndReturn(run func() error) *MockIntentInternal_Close_Call {
	_c.Call.Return(run)
	return _c
}

// Ctx provides a mock function with given fields:
func (_m *MockIntentInternal) Ctx() context.Context {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Ctx")
	}

	var r0 context.Context
	if rf, ok := ret.Get(0).(func() context.Context); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// MockIntentInternal_Ctx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Ctx'
type MockIntentInternal_Ctx_Call struct {
	*mock.Call
}

// Ctx is a helper method to define mock.On call
func (_e *MockIntentInternal_Expecter) Ctx() *MockIntentInternal_Ctx_Call {
	return &MockIntentInternal_Ctx_Call{Call: _e.mock.On("Ctx")}
}

func (_c *MockIntentInternal_Ctx_Call) Run(run func()) *MockIntentInternal_Ctx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIntentInternal_Ctx_Call) Return(_a0 context.Context) *MockIntentInternal_Ctx_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIntentInternal_Ctx_Call) RunAndReturn(run func() context.Context) *MockIntentInternal_Ctx_Call {
	_c.Call.Return(run)
	return _c
}

// Interest provides a mock function with given fields:
func (_m *MockIntentInternal) Interest() <-chan Route {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Interest")
	}

	var r0 <-chan Route
	if rf, ok := ret.Get(0).(func() <-chan Route); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan Route)
		}
	}

	return r0
}

// MockIntentInternal_Interest_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Interest'
type MockIntentInternal_Interest_Call struct {
	*mock.Call
}

// Interest is a helper method to define mock.On call
func (_e *MockIntentInternal_Expecter) Interest() *MockIntentInternal_Interest_Call {
	return &MockIntentInternal_Interest_Call{Call: _e.mock.On("Interest")}
}

func (_c *MockIntentInternal_Interest_Call) Run(run func()) *MockIntentInternal_Interest_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIntentInternal_Interest_Call) Return(_a0 <-chan Route) *MockIntentInternal_Interest_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIntentInternal_Interest_Call) RunAndReturn(run func() <-chan Route) *MockIntentInternal_Interest_Call {
	_c.Call.Return(run)
	return _c
}

// Link provides a mock function with given fields: _a0
func (_m *MockIntentInternal) Link(_a0 chan<- protoreflect.ProtoMessage) {
	_m.Called(_a0)
}

// MockIntentInternal_Link_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Link'
type MockIntentInternal_Link_Call struct {
	*mock.Call
}

// Link is a helper method to define mock.On call
//   - _a0 chan<- protoreflect.ProtoMessage
func (_e *MockIntentInternal_Expecter) Link(_a0 interface{}) *MockIntentInternal_Link_Call {
	return &MockIntentInternal_Link_Call{Call: _e.mock.On("Link", _a0)}
}

func (_c *MockIntentInternal_Link_Call) Run(run func(_a0 chan<- protoreflect.ProtoMessage)) *MockIntentInternal_Link_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(chan<- protoreflect.ProtoMessage))
	})
	return _c
}

func (_c *MockIntentInternal_Link_Call) Return() *MockIntentInternal_Link_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIntentInternal_Link_Call) RunAndReturn(run func(chan<- protoreflect.ProtoMessage)) *MockIntentInternal_Link_Call {
	_c.Call.Return(run)
	return _c
}

// Notify provides a mock function with given fields:
func (_m *MockIntentInternal) Notify() {
	_m.Called()
}

// MockIntentInternal_Notify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Notify'
type MockIntentInternal_Notify_Call struct {
	*mock.Call
}

// Notify is a helper method to define mock.On call
func (_e *MockIntentInternal_Expecter) Notify() *MockIntentInternal_Notify_Call {
	return &MockIntentInternal_Notify_Call{Call: _e.mock.On("Notify")}
}

func (_c *MockIntentInternal_Notify_Call) Run(run func()) *MockIntentInternal_Notify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIntentInternal_Notify_Call) Return() *MockIntentInternal_Notify_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockIntentInternal_Notify_Call) RunAndReturn(run func()) *MockIntentInternal_Notify_Call {
	_c.Call.Return(run)
	return _c
}

// Route provides a mock function with given fields:
func (_m *MockIntentInternal) Route() Route {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Route")
	}

	var r0 Route
	if rf, ok := ret.Get(0).(func() Route); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(Route)
	}

	return r0
}

// MockIntentInternal_Route_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Route'
type MockIntentInternal_Route_Call struct {
	*mock.Call
}

// Route is a helper method to define mock.On call
func (_e *MockIntentInternal_Expecter) Route() *MockIntentInternal_Route_Call {
	return &MockIntentInternal_Route_Call{Call: _e.mock.On("Route")}
}

func (_c *MockIntentInternal_Route_Call) Run(run func()) *MockIntentInternal_Route_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockIntentInternal_Route_Call) Return(_a0 Route) *MockIntentInternal_Route_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIntentInternal_Route_Call) RunAndReturn(run func() Route) *MockIntentInternal_Route_Call {
	_c.Call.Return(run)
	return _c
}

// Send provides a mock function with given fields: _a0, _a1
func (_m *MockIntentInternal) Send(_a0 context.Context, _a1 protoreflect.ProtoMessage) error {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, protoreflect.ProtoMessage) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockIntentInternal_Send_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Send'
type MockIntentInternal_Send_Call struct {
	*mock.Call
}

// Send is a helper method to define mock.On call
//   - _a0 context.Context
//   - _a1 protoreflect.ProtoMessage
func (_e *MockIntentInternal_Expecter) Send(_a0 interface{}, _a1 interface{}) *MockIntentInternal_Send_Call {
	return &MockIntentInternal_Send_Call{Call: _e.mock.On("Send", _a0, _a1)}
}

func (_c *MockIntentInternal_Send_Call) Run(run func(_a0 context.Context, _a1 protoreflect.ProtoMessage)) *MockIntentInternal_Send_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(protoreflect.ProtoMessage))
	})
	return _c
}

func (_c *MockIntentInternal_Send_Call) Return(_a0 error) *MockIntentInternal_Send_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockIntentInternal_Send_Call) RunAndReturn(run func(context.Context, protoreflect.ProtoMessage) error) *MockIntentInternal_Send_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockIntentInternal creates a new instance of MockIntentInternal. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIntentInternal(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIntentInternal {
	mock := &MockIntentInternal{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
