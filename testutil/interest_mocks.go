// Code generated by MockGen. DO NOT EDIT.
// Source: interest.go
//
// Generated by this command:
//
//	mockgen -source=interest.go -package testutil -destination=testutil/interest_mocks.go
//

// Package testutil is a generated GoMock package.
package testutil

import (
	context "context"
	reflect "reflect"

	dndm "github.com/itohio/dndm"
	gomock "go.uber.org/mock/gomock"
	proto "google.golang.org/protobuf/proto"
)

// MockInterest is a mock of Interest interface.
type MockInterest struct {
	ctrl     *gomock.Controller
	recorder *MockInterestMockRecorder
}

// MockInterestMockRecorder is the mock recorder for MockInterest.
type MockInterestMockRecorder struct {
	mock *MockInterest
}

// NewMockInterest creates a new mock instance.
func NewMockInterest(ctrl *gomock.Controller) *MockInterest {
	mock := &MockInterest{ctrl: ctrl}
	mock.recorder = &MockInterestMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterest) EXPECT() *MockInterestMockRecorder {
	return m.recorder
}

// C mocks base method.
func (m *MockInterest) C() <-chan proto.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "C")
	ret0, _ := ret[0].(<-chan proto.Message)
	return ret0
}

// C indicates an expected call of C.
func (mr *MockInterestMockRecorder) C() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "C", reflect.TypeOf((*MockInterest)(nil).C))
}

// Close mocks base method.
func (m *MockInterest) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockInterestMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockInterest)(nil).Close))
}

// Route mocks base method.
func (m *MockInterest) Route() dndm.Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Route")
	ret0, _ := ret[0].(dndm.Route)
	return ret0
}

// Route indicates an expected call of Route.
func (mr *MockInterestMockRecorder) Route() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Route", reflect.TypeOf((*MockInterest)(nil).Route))
}

// MockInterestInternal is a mock of InterestInternal interface.
type MockInterestInternal struct {
	ctrl     *gomock.Controller
	recorder *MockInterestInternalMockRecorder
}

// MockInterestInternalMockRecorder is the mock recorder for MockInterestInternal.
type MockInterestInternalMockRecorder struct {
	mock *MockInterestInternal
}

// NewMockInterestInternal creates a new mock instance.
func NewMockInterestInternal(ctrl *gomock.Controller) *MockInterestInternal {
	mock := &MockInterestInternal{ctrl: ctrl}
	mock.recorder = &MockInterestInternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterestInternal) EXPECT() *MockInterestInternalMockRecorder {
	return m.recorder
}

// C mocks base method.
func (m *MockInterestInternal) C() <-chan proto.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "C")
	ret0, _ := ret[0].(<-chan proto.Message)
	return ret0
}

// C indicates an expected call of C.
func (mr *MockInterestInternalMockRecorder) C() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "C", reflect.TypeOf((*MockInterestInternal)(nil).C))
}

// Close mocks base method.
func (m *MockInterestInternal) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockInterestInternalMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockInterestInternal)(nil).Close))
}

// Ctx mocks base method.
func (m *MockInterestInternal) Ctx() context.Context {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ctx")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

// Ctx indicates an expected call of Ctx.
func (mr *MockInterestInternalMockRecorder) Ctx() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ctx", reflect.TypeOf((*MockInterestInternal)(nil).Ctx))
}

// MsgC mocks base method.
func (m *MockInterestInternal) MsgC() chan<- proto.Message {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MsgC")
	ret0, _ := ret[0].(chan<- proto.Message)
	return ret0
}

// MsgC indicates an expected call of MsgC.
func (mr *MockInterestInternalMockRecorder) MsgC() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MsgC", reflect.TypeOf((*MockInterestInternal)(nil).MsgC))
}

// Route mocks base method.
func (m *MockInterestInternal) Route() dndm.Route {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Route")
	ret0, _ := ret[0].(dndm.Route)
	return ret0
}

// Route indicates an expected call of Route.
func (mr *MockInterestInternalMockRecorder) Route() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Route", reflect.TypeOf((*MockInterestInternal)(nil).Route))
}
